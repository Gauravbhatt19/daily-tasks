openapi: 3.0.3
info:
  title: 'Daily Tasks'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://daily-tasks-web-app.test'
paths:
  /api/login:
    post:
      summary: 'Handle a login request to the application.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userid:
                  type: string
                  description: 'The value format is invalid. Must not be greater than 255 characters.'
                  example: bhzscrhraswurceykphedftvqftnlicbilogmvdikkdgciuzgtkezppojrbyobzstaindxitmpzlwezygnayhtvzxewubqqyurereflxhjizozczvrwmqkdafyflinerhbsostxcaupwaxbwjpfkzshnaxcoyqfaazlylidubkkabprzswudbmohszdzjestbbxrgbfajivzstkvkfyfbmqgrggmnfeprcwiubmqsrrtyytkbgof
                password:
                  type: string
                  description: 'The value format is invalid. Must not be greater than 255 characters.'
                  example: gwbhtytkaxeaavredzfangyfshrheawqrrvxzmwqnjvgvuhmumoiiyjsmsbydwzxaodjkoicokjxuqchynyplpqsriumvlorgclnccfgmtenwxgqkaexhjrgpilbajvfpjsbunrnhjbcpi
              required:
                - userid
                - password
      security: []
  /api/revoke/tokens:
    get:
      summary: 'Revoke all user''s tokens.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/task/store:
    post:
      summary: 'Store a newly created task in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bikwmqfaufqbxsoepsfolfgrxti
                taskdescription:
                  type: string
                  description: ''
                  example: magnam
                taskdate:
                  type: string
                  description: ''
                  example: qui
              required:
                - taskname
  '/api/task/update/{task}':
    post:
      summary: 'Update the specified task in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskname:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bssjuvluvirsdulrsmwuqytrdzegcobyayqarqzilbczmantwadueaydpnhmlepsmotlkligmawceffejxglqophbdavubpeuvqhrnghmivqvppdfxwc
                taskdescription:
                  type: string
                  description: ''
                  example: eligendi
                taskdate:
                  type: string
                  description: ''
                  example: saepe
              required:
                - taskname
    parameters:
      -
        in: path
        name: task
        description: ''
        example: 11
        required: true
        schema:
          type: integer
  '/api/task/completed/{task}':
    get:
      summary: 'Update the specified task as completed.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: task
        description: ''
        example: 6
        required: true
        schema:
          type: integer
  '/api/task/pending/{task}':
    get:
      summary: 'Update the specified task as pending.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: task
        description: ''
        example: 14
        required: true
        schema:
          type: integer
  /api/data:
    get:
      summary: 'Show user''s data.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
