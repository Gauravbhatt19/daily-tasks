## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Handle a login request to the application.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      userid:
        name: userid
        description: 'The value format is invalid. Must not be greater than 255 characters.'
        required: true
        example: bhzscrhraswurceykphedftvqftnlicbilogmvdikkdgciuzgtkezppojrbyobzstaindxitmpzlwezygnayhtvzxewubqqyurereflxhjizozczvrwmqkdafyflinerhbsostxcaupwaxbwjpfkzshnaxcoyqfaazlylidubkkabprzswudbmohszdzjestbbxrgbfajivzstkvkfyfbmqgrggmnfeprcwiubmqsrrtyytkbgof
        type: string
      password:
        name: password
        description: 'The value format is invalid. Must not be greater than 255 characters.'
        required: true
        example: gwbhtytkaxeaavredzfangyfshrheawqrrvxzmwqnjvgvuhmumoiiyjsmsbydwzxaodjkoicokjxuqchynyplpqsriumvlorgclnccfgmtenwxgqkaexhjrgpilbajvfpjsbunrnhjbcpi
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/revoke/tokens
    metadata:
      title: 'Revoke all user''s tokens.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/task/store
    metadata:
      title: 'Store a newly created task in storage.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      taskname:
        name: taskname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: bikwmqfaufqbxsoepsfolfgrxti
        type: string
      taskdescription:
        name: taskdescription
        description: ''
        required: false
        example: magnam
        type: string
      taskdate:
        name: taskdate
        description: ''
        required: false
        example: qui
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: 'api/task/update/{task}'
    metadata:
      title: 'Update the specified task in storage.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task:
        name: task
        description: ''
        required: true
        example: 11
        type: integer
    queryParameters: []
    bodyParameters:
      taskname:
        name: taskname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: bssjuvluvirsdulrsmwuqytrdzegcobyayqarqzilbczmantwadueaydpnhmlepsmotlkligmawceffejxglqophbdavubpeuvqhrnghmivqvppdfxwc
        type: string
      taskdescription:
        name: taskdescription
        description: ''
        required: false
        example: eligendi
        type: string
      taskdate:
        name: taskdate
        description: ''
        required: false
        example: saepe
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/task/completed/{task}'
    metadata:
      title: 'Update the specified task as completed.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task:
        name: task
        description: ''
        required: true
        example: 6
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/task/pending/{task}'
    metadata:
      title: 'Update the specified task as pending.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task:
        name: task
        description: ''
        required: true
        example: 14
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/data
    metadata:
      title: 'Show user''s data.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
